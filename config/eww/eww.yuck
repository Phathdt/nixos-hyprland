(defwidget wifi-popup []
  (box :class "wifi-popup" :orientation "v" :space-evenly false :spacing 8
    (box :class "popup-header" :orientation "h" :space-evenly false
      (label :class "popup-title" :text "Wi-Fi" :halign "start")
      (button :class "wifi-toggle ${wifi-enabled ? 'enabled' : 'disabled'}"
        :onclick "scripts/toggle-wifi.sh"
        (label :text "${wifi-enabled ? 'ON' : 'OFF'}")
      )
    )
    
    (scroll :class "wifi-list" :height 300 :vscroll true
      (box :orientation "v" :space-evenly false :spacing 4
        (for network in wifi-networks
          (button :class "wifi-item ${network.connected ? 'connected' : ''}"
            :onclick "scripts/connect-wifi.sh \"${network.ssid}\""
            (box :orientation "h" :space-evenly false :spacing 12
              (label :class "wifi-icon" :text "${network.icon}")
              (box :orientation "v" :halign "start" :space-evenly false
                (label :class "wifi-name" :text "${network.ssid}" :halign "start")
                (label :class "wifi-status" :text "${network.status}" :halign "start")
              )
              (label :class "wifi-signal" :text "${network.signal}" :halign "end")
            )
          )
        )
      )
    )
  )
)


(defwidget wifi-button []
  (eventbox :onclick "scripts/toggle-wifi-popup.sh"
    (label :class "wifi-icon" :text "з░це")
  )
)

(defwindow wifi-popup-window
  :monitor 0
  :geometry (geometry :x "0px" :y "0px" :width "320px" :height "400px" :anchor "top right")
  :stacking "overlay"
  :reserve (struts :distance "0px" :side "top")
  :windowtype "dock"
  :wm-ignore false
  (wifi-popup)
)

(defpoll wifi-networks :interval "3s" :initial "[]"
"scripts/get-wifi-networks.sh")
(defpoll wifi-enabled :interval "2s" :initial true
"scripts/get-wifi-status.sh")

